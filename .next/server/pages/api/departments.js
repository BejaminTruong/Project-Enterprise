"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/departments";
exports.ids = ["pages/api/departments"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "(api)/./pages/api/departments/index.js":
/*!****************************************!*\
  !*** ./pages/api/departments/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ departmentList)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nconst getTotalIdea = async (id)=>{\n    const allUsersOfDepartment = await prisma.user.findMany({\n        where: {\n            departmentId: id,\n            deleted: false\n        }\n    });\n    if (allUsersOfDepartment.length < 1) return 0;\n    let totalUser = 0;\n    for(let i = 0; i < allUsersOfDepartment.length; i++){\n        const element = allUsersOfDepartment[i];\n        const allIdeasOfUser = await prisma.idea.count({\n            where: {\n                userId: element.id,\n                deleted: false\n            }\n        });\n        totalUser += allIdeasOfUser;\n    }\n    return totalUser;\n};\nasync function departmentList(req, res) {\n    try {\n        if (req.method === \"GET\") {\n            let totalIdea = 0;\n            if (req.query.id) {\n                const foundedDepartment = await prisma.department.findFirst({\n                    where: {\n                        id: +req.query.id,\n                        deleted: false\n                    }\n                });\n                if (!foundedDepartment) return res.status(400).send({\n                    message: \"Department not found!\"\n                });\n                return res.status(200).send(foundedDepartment);\n            }\n            const foundedDepartments = await prisma.department.findMany({\n                where: {\n                    deleted: false\n                }\n            });\n            if (foundedDepartments.length < 1) return res.status(200).send({\n                message: \"Departments not found\"\n            });\n            for(let i = 0; i < foundedDepartments.length; i++){\n                const element = foundedDepartments[i];\n                totalIdea = await getTotalIdea(element.id);\n                element.totalIdea = totalIdea;\n            }\n            res.status(200).send(foundedDepartments);\n        }\n    } catch (error) {\n        res.status(500).send(error);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZGVwYXJ0bWVudHMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBQzdDLEtBQUssQ0FBQ0MsTUFBTSxHQUFHLEdBQUcsQ0FBQ0Qsd0RBQVk7QUFFL0IsS0FBSyxDQUFDRSxZQUFZLFVBQVVDLEVBQUUsR0FBSyxDQUFDO0lBQ2xDLEtBQUssQ0FBQ0Msb0JBQW9CLEdBQUcsS0FBSyxDQUFDSCxNQUFNLENBQUNJLElBQUksQ0FBQ0MsUUFBUSxDQUFDLENBQUM7UUFDdkRDLEtBQUssRUFBRSxDQUFDO1lBQ05DLFlBQVksRUFBRUwsRUFBRTtZQUNoQk0sT0FBTyxFQUFFLEtBQUs7UUFDaEIsQ0FBQztJQUNILENBQUM7SUFDRCxFQUFFLEVBQUVMLG9CQUFvQixDQUFDTSxNQUFNLEdBQUcsQ0FBQyxFQUNqQyxNQUFNLENBQUMsQ0FBQztJQUNWLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLENBQUM7SUFDakIsR0FBRyxDQUFFLEdBQUcsQ0FBQ0MsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHUixvQkFBb0IsQ0FBQ00sTUFBTSxFQUFFRSxDQUFDLEdBQUksQ0FBQztRQUNyRCxLQUFLLENBQUNDLE9BQU8sR0FBR1Qsb0JBQW9CLENBQUNRLENBQUM7UUFDdEMsS0FBSyxDQUFDRSxjQUFjLEdBQUcsS0FBSyxDQUFDYixNQUFNLENBQUNjLElBQUksQ0FBQ0MsS0FBSyxDQUFDLENBQUM7WUFDOUNULEtBQUssRUFBRSxDQUFDO2dCQUFDVSxNQUFNLEVBQUVKLE9BQU8sQ0FBQ1YsRUFBRTtnQkFBRU0sT0FBTyxFQUFFLEtBQUs7WUFBQyxDQUFDO1FBQy9DLENBQUM7UUFDREUsU0FBUyxJQUFJRyxjQUFjO0lBQzdCLENBQUM7SUFDRCxNQUFNLENBQUNILFNBQVM7QUFDbEIsQ0FBQztBQUVjLGVBQWVPLGNBQWMsQ0FBQ0MsR0FBRyxFQUFFQyxHQUFHLEVBQUUsQ0FBQztJQUN0RCxHQUFHLENBQUMsQ0FBQztRQUNILEVBQUUsRUFBRUQsR0FBRyxDQUFDRSxNQUFNLEtBQUssQ0FBSyxNQUFFLENBQUM7WUFDekIsR0FBRyxDQUFDQyxTQUFTLEdBQUcsQ0FBQztZQUNqQixFQUFFLEVBQUVILEdBQUcsQ0FBQ0ksS0FBSyxDQUFDcEIsRUFBRSxFQUFFLENBQUM7Z0JBQ2pCLEtBQUssQ0FBQ3FCLGlCQUFpQixHQUFHLEtBQUssQ0FBQ3ZCLE1BQU0sQ0FBQ3dCLFVBQVUsQ0FBQ0MsU0FBUyxDQUFDLENBQUM7b0JBQzNEbkIsS0FBSyxFQUFFLENBQUM7d0JBQ05KLEVBQUUsR0FBR2dCLEdBQUcsQ0FBQ0ksS0FBSyxDQUFDcEIsRUFBRTt3QkFDakJNLE9BQU8sRUFBRSxLQUFLO29CQUNoQixDQUFDO2dCQUNILENBQUM7Z0JBQ0QsRUFBRSxHQUFHZSxpQkFBaUIsRUFDcEIsTUFBTSxDQUFDSixHQUFHLENBQUNPLE1BQU0sQ0FBQyxHQUFHLEVBQUVDLElBQUksQ0FBQyxDQUFDO29CQUFDQyxPQUFPLEVBQUUsQ0FBdUI7Z0JBQUMsQ0FBQztnQkFDbEUsTUFBTSxDQUFDVCxHQUFHLENBQUNPLE1BQU0sQ0FBQyxHQUFHLEVBQUVDLElBQUksQ0FBQ0osaUJBQWlCO1lBQy9DLENBQUM7WUFDRCxLQUFLLENBQUNNLGtCQUFrQixHQUFHLEtBQUssQ0FBQzdCLE1BQU0sQ0FBQ3dCLFVBQVUsQ0FBQ25CLFFBQVEsQ0FBQyxDQUFDO2dCQUMzREMsS0FBSyxFQUFFLENBQUM7b0JBQUNFLE9BQU8sRUFBRSxLQUFLO2dCQUFDLENBQUM7WUFDM0IsQ0FBQztZQUNELEVBQUUsRUFBRXFCLGtCQUFrQixDQUFDcEIsTUFBTSxHQUFHLENBQUMsRUFDL0IsTUFBTSxDQUFDVSxHQUFHLENBQUNPLE1BQU0sQ0FBQyxHQUFHLEVBQUVDLElBQUksQ0FBQyxDQUFDO2dCQUFDQyxPQUFPLEVBQUUsQ0FBdUI7WUFBQyxDQUFDO1lBQ2xFLEdBQUcsQ0FBRSxHQUFHLENBQUNqQixDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdrQixrQkFBa0IsQ0FBQ3BCLE1BQU0sRUFBRUUsQ0FBQyxHQUFJLENBQUM7Z0JBQ25ELEtBQUssQ0FBQ0MsT0FBTyxHQUFHaUIsa0JBQWtCLENBQUNsQixDQUFDO2dCQUNwQ1UsU0FBUyxHQUFHLEtBQUssQ0FBQ3BCLFlBQVksQ0FBQ1csT0FBTyxDQUFDVixFQUFFO2dCQUN6Q1UsT0FBTyxDQUFDUyxTQUFTLEdBQUdBLFNBQVM7WUFDL0IsQ0FBQztZQUNERixHQUFHLENBQUNPLE1BQU0sQ0FBQyxHQUFHLEVBQUVDLElBQUksQ0FBQ0Usa0JBQWtCO1FBQ3pDLENBQUM7SUFDSCxDQUFDLENBQUMsS0FBSyxFQUFFQyxLQUFLLEVBQUUsQ0FBQztRQUNmWCxHQUFHLENBQUNPLE1BQU0sQ0FBQyxHQUFHLEVBQUVDLElBQUksQ0FBQ0csS0FBSztJQUM1QixDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VudGVycHJpc2UvLi9wYWdlcy9hcGkvZGVwYXJ0bWVudHMvaW5kZXguanM/MWQ5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tIFwiQHByaXNtYS9jbGllbnRcIjtcclxuY29uc3QgcHJpc21hID0gbmV3IFByaXNtYUNsaWVudCgpO1xyXG5cclxuY29uc3QgZ2V0VG90YWxJZGVhID0gYXN5bmMgKGlkKSA9PiB7XHJcbiAgY29uc3QgYWxsVXNlcnNPZkRlcGFydG1lbnQgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kTWFueSh7XHJcbiAgICB3aGVyZToge1xyXG4gICAgICBkZXBhcnRtZW50SWQ6IGlkLFxyXG4gICAgICBkZWxldGVkOiBmYWxzZSxcclxuICAgIH0sXHJcbiAgfSk7XHJcbiAgaWYgKGFsbFVzZXJzT2ZEZXBhcnRtZW50Lmxlbmd0aCA8IDEpXHJcbiAgICByZXR1cm4gMDtcclxuICBsZXQgdG90YWxVc2VyID0gMDtcclxuICBmb3IgKGxldCBpID0gMDsgaSA8IGFsbFVzZXJzT2ZEZXBhcnRtZW50Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICBjb25zdCBlbGVtZW50ID0gYWxsVXNlcnNPZkRlcGFydG1lbnRbaV07XHJcbiAgICBjb25zdCBhbGxJZGVhc09mVXNlciA9IGF3YWl0IHByaXNtYS5pZGVhLmNvdW50KHtcclxuICAgICAgd2hlcmU6IHsgdXNlcklkOiBlbGVtZW50LmlkLCBkZWxldGVkOiBmYWxzZSB9LFxyXG4gICAgfSk7XHJcbiAgICB0b3RhbFVzZXIgKz0gYWxsSWRlYXNPZlVzZXI7XHJcbiAgfVxyXG4gIHJldHVybiB0b3RhbFVzZXI7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBkZXBhcnRtZW50TGlzdChyZXEsIHJlcykge1xyXG4gIHRyeSB7XHJcbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gXCJHRVRcIikge1xyXG4gICAgICBsZXQgdG90YWxJZGVhID0gMDtcclxuICAgICAgaWYgKHJlcS5xdWVyeS5pZCkge1xyXG4gICAgICAgIGNvbnN0IGZvdW5kZWREZXBhcnRtZW50ID0gYXdhaXQgcHJpc21hLmRlcGFydG1lbnQuZmluZEZpcnN0KHtcclxuICAgICAgICAgIHdoZXJlOiB7XHJcbiAgICAgICAgICAgIGlkOiArcmVxLnF1ZXJ5LmlkLFxyXG4gICAgICAgICAgICBkZWxldGVkOiBmYWxzZSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgaWYgKCFmb3VuZGVkRGVwYXJ0bWVudClcclxuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZCh7IG1lc3NhZ2U6IFwiRGVwYXJ0bWVudCBub3QgZm91bmQhXCIgfSk7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKGZvdW5kZWREZXBhcnRtZW50KTtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCBmb3VuZGVkRGVwYXJ0bWVudHMgPSBhd2FpdCBwcmlzbWEuZGVwYXJ0bWVudC5maW5kTWFueSh7XHJcbiAgICAgICAgd2hlcmU6IHsgZGVsZXRlZDogZmFsc2UgfSxcclxuICAgICAgfSk7XHJcbiAgICAgIGlmIChmb3VuZGVkRGVwYXJ0bWVudHMubGVuZ3RoIDwgMSlcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoeyBtZXNzYWdlOiBcIkRlcGFydG1lbnRzIG5vdCBmb3VuZFwiIH0pO1xyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZvdW5kZWREZXBhcnRtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBmb3VuZGVkRGVwYXJ0bWVudHNbaV07XHJcbiAgICAgICAgdG90YWxJZGVhID0gYXdhaXQgZ2V0VG90YWxJZGVhKGVsZW1lbnQuaWQpO1xyXG4gICAgICAgIGVsZW1lbnQudG90YWxJZGVhID0gdG90YWxJZGVhXHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQoZm91bmRlZERlcGFydG1lbnRzKTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyb3IpO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwicHJpc21hIiwiZ2V0VG90YWxJZGVhIiwiaWQiLCJhbGxVc2Vyc09mRGVwYXJ0bWVudCIsInVzZXIiLCJmaW5kTWFueSIsIndoZXJlIiwiZGVwYXJ0bWVudElkIiwiZGVsZXRlZCIsImxlbmd0aCIsInRvdGFsVXNlciIsImkiLCJlbGVtZW50IiwiYWxsSWRlYXNPZlVzZXIiLCJpZGVhIiwiY291bnQiLCJ1c2VySWQiLCJkZXBhcnRtZW50TGlzdCIsInJlcSIsInJlcyIsIm1ldGhvZCIsInRvdGFsSWRlYSIsInF1ZXJ5IiwiZm91bmRlZERlcGFydG1lbnQiLCJkZXBhcnRtZW50IiwiZmluZEZpcnN0Iiwic3RhdHVzIiwic2VuZCIsIm1lc3NhZ2UiLCJmb3VuZGVkRGVwYXJ0bWVudHMiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/departments/index.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/departments/index.js"));
module.exports = __webpack_exports__;

})();